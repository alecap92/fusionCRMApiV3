"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const mongoose_1 = __importDefault(require("mongoose"));
const dotenv_1 = __importDefault(require("dotenv"));
const AutomationModel_1 = __importDefault(require("../models/AutomationModel"));
const OrganizationModel_1 = __importDefault(require("../models/OrganizationModel"));
const UserModel_1 = __importDefault(require("../models/UserModel"));
dotenv_1.default.config();
function createWhatsAppAutomationExample() {
    return __awaiter(this, void 0, void 0, function* () {
        try {
            yield mongoose_1.default.connect(process.env.MONGODB_CONNECTION);
            console.log("‚úÖ Conectado a MongoDB");
            // Buscar una organizaci√≥n de ejemplo
            const organization = yield OrganizationModel_1.default.findOne();
            if (!organization) {
                console.error("‚ùå No se encontr√≥ ninguna organizaci√≥n");
                return;
            }
            // Buscar un usuario para asignarlo como creador
            const user = yield UserModel_1.default.findOne({
                _id: { $in: organization.employees },
            });
            if (!user) {
                console.error("‚ùå No se encontr√≥ ning√∫n usuario");
                return;
            }
            console.log(`üìä Creando automatizaci√≥n para organizaci√≥n: ${organization.companyName}`);
            console.log(`üë§ Usuario creador: ${user.firstName} ${user.lastName}`);
            // Crear una automatizaci√≥n de bienvenida con el editor visual
            const welcomeAutomation = yield AutomationModel_1.default.create({
                name: "Bienvenida WhatsApp Visual",
                description: "Automatizaci√≥n de bienvenida creada con el editor visual",
                organizationId: organization._id,
                isActive: true,
                automationType: "conversation",
                triggerType: "conversation_started",
                nodes: [
                    {
                        id: "trigger_1",
                        type: "trigger",
                        module: "whatsapp",
                        event: "conversation_started",
                        data: {},
                        next: ["action_1"],
                        position: { x: 100, y: 100 },
                    },
                    {
                        id: "action_1",
                        type: "action",
                        module: "whatsapp",
                        event: "send_message",
                        data: {
                            message: "¬°Hola {{contact_name}}! üëã\n\n¬°Bienvenido a nuestro servicio de atenci√≥n por WhatsApp!\n\n¬øEn qu√© puedo ayudarte hoy?\n\n1Ô∏è‚É£ Informaci√≥n sobre productos\n2Ô∏è‚É£ Estado de mi pedido\n3Ô∏è‚É£ Soporte t√©cnico\n4Ô∏è‚É£ Hablar con un agente\n\nPor favor, responde con el n√∫mero de la opci√≥n que necesitas.",
                        },
                        next: ["delay_1"],
                        position: { x: 100, y: 250 },
                    },
                    {
                        id: "delay_1",
                        type: "delay",
                        module: "system",
                        data: {
                            delay: 30, // 30 segundos
                            delayType: "seconds",
                        },
                        next: ["condition_1"],
                        position: { x: 100, y: 400 },
                    },
                    {
                        id: "condition_1",
                        type: "condition",
                        module: "system",
                        data: {
                            condition: {
                                field: "message",
                                operator: "contains",
                                value: "1",
                            },
                        },
                        trueBranch: "action_2",
                        falseBranch: "action_3",
                        position: { x: 100, y: 550 },
                    },
                    {
                        id: "action_2",
                        type: "action",
                        module: "whatsapp",
                        event: "send_message",
                        data: {
                            message: "üì¶ *Nuestros Productos*\n\nTenemos una amplia gama de productos disponibles:\n\n‚Ä¢ Producto A - $99\n‚Ä¢ Producto B - $149\n‚Ä¢ Producto C - $199\n\n¬øTe gustar√≠a m√°s informaci√≥n sobre alguno en particular?",
                        },
                        next: [],
                        position: { x: -50, y: 700 },
                    },
                    {
                        id: "action_3",
                        type: "action",
                        module: "whatsapp",
                        event: "send_message",
                        data: {
                            message: "Entiendo que necesitas ayuda con otra opci√≥n. Un agente se pondr√° en contacto contigo pronto. üë®‚Äçüíº",
                        },
                        next: ["action_4"],
                        position: { x: 250, y: 700 },
                    },
                    {
                        id: "action_4",
                        type: "action",
                        module: "system",
                        event: "notify_team",
                        data: {
                            message: "Cliente necesita atenci√≥n personalizada",
                        },
                        next: [],
                        position: { x: 250, y: 850 },
                    },
                ],
                edges: [
                    { id: "e1", source: "trigger_1", target: "action_1" },
                    { id: "e2", source: "action_1", target: "delay_1" },
                    { id: "e3", source: "delay_1", target: "condition_1" },
                    { id: "e4", source: "condition_1", target: "action_2", type: "true" },
                    { id: "e5", source: "condition_1", target: "action_3", type: "false" },
                    { id: "e6", source: "action_3", target: "action_4" },
                ],
                conversationSettings: {
                    pauseOnUserReply: true,
                    maxMessagesPerSession: 5,
                    sessionTimeout: 30,
                },
                createdBy: user._id,
                stats: {
                    totalExecutions: 0,
                    successfulExecutions: 0,
                    failedExecutions: 0,
                },
            });
            console.log("‚úÖ Automatizaci√≥n de bienvenida creada:", welcomeAutomation.name);
            // Crear una automatizaci√≥n por palabras clave
            const keywordAutomation = yield AutomationModel_1.default.create({
                name: "Respuestas por Palabras Clave",
                description: "Responde autom√°ticamente a palabras clave espec√≠ficas",
                organizationId: organization._id,
                isActive: true,
                automationType: "conversation",
                triggerType: "keyword",
                nodes: [
                    {
                        id: "trigger_keyword",
                        type: "trigger",
                        module: "whatsapp",
                        event: "keyword",
                        data: {
                            keywords: ["precio", "costo", "cuanto", "valor"],
                        },
                        next: ["action_price"],
                        position: { x: 100, y: 100 },
                    },
                    {
                        id: "action_price",
                        type: "action",
                        module: "whatsapp",
                        event: "send_message",
                        data: {
                            message: "üí∞ *Informaci√≥n de Precios*\n\nNuestros precios son:\n\n‚Ä¢ Plan B√°sico: $29/mes\n‚Ä¢ Plan Pro: $79/mes\n‚Ä¢ Plan Enterprise: Contactar ventas\n\n¬øTe gustar√≠a conocer m√°s detalles sobre alg√∫n plan?",
                        },
                        next: [],
                        position: { x: 100, y: 250 },
                    },
                ],
                edges: [
                    { id: "e_kw1", source: "trigger_keyword", target: "action_price" },
                ],
                triggerConditions: {
                    keywords: ["precio", "costo", "cuanto", "valor"],
                },
                conversationSettings: {
                    pauseOnUserReply: false,
                    maxMessagesPerSession: 10,
                    sessionTimeout: 60,
                },
                createdBy: user._id,
                stats: {
                    totalExecutions: 0,
                    successfulExecutions: 0,
                    failedExecutions: 0,
                },
            });
            console.log("‚úÖ Automatizaci√≥n de palabras clave creada:", keywordAutomation.name);
            // Mostrar resumen
            const totalAutomations = yield AutomationModel_1.default.countDocuments({
                organizationId: organization._id,
            });
            const activeAutomations = yield AutomationModel_1.default.countDocuments({
                organizationId: organization._id,
                isActive: true,
            });
            console.log("\nüìä Resumen de automatizaciones:");
            console.log(`üìù Total: ${totalAutomations}`);
            console.log(`‚úÖ Activas: ${activeAutomations}`);
            console.log("\nüéâ ¬°Automatizaciones de WhatsApp creadas exitosamente!");
            console.log("Puedes editarlas desde el WorkflowEditor en el frontend");
        }
        catch (error) {
            console.error("‚ùå Error:", error);
        }
        finally {
            yield mongoose_1.default.disconnect();
            console.log("\nüëã Desconectado de MongoDB");
        }
    });
}
// Ejecutar el script
createWhatsAppAutomationExample();
