"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const mongoose_1 = __importDefault(require("mongoose"));
const dotenv_1 = __importDefault(require("dotenv"));
const AutomationModel_1 = __importDefault(require("../models/AutomationModel"));
const OrganizationModel_1 = __importDefault(require("../models/OrganizationModel"));
const UserModel_1 = __importDefault(require("../models/UserModel"));
dotenv_1.default.config();
const createSampleAutomation = () => __awaiter(void 0, void 0, void 0, function* () {
    try {
        // Conectar a MongoDB
        yield mongoose_1.default.connect(process.env.MONGODB_CONNECTION);
        console.log("‚úÖ Conectado a MongoDB");
        // Buscar una organizaci√≥n y usuario para la automatizaci√≥n
        const organization = yield OrganizationModel_1.default.findOne({});
        const user = yield UserModel_1.default.findOne({});
        if (!organization || !user) {
            console.log("‚ùå No se encontr√≥ organizaci√≥n o usuario");
            return;
        }
        // Crear automatizaci√≥n de ejemplo: Chatbot de atenci√≥n al cliente
        const chatbotAutomation = {
            name: "Chatbot de Atenci√≥n al Cliente",
            description: "Automatizaci√≥n que responde preguntas frecuentes y deriva a un agente si es necesario",
            organizationId: organization._id,
            isActive: true,
            triggerType: "conversation_started",
            triggerConditions: {},
            conversationSettings: {
                pauseOnUserReply: true,
                maxMessagesPerSession: 20,
                sessionTimeout: 30,
            },
            createdBy: user._id,
            nodes: [
                // 1. Trigger: Cuando inicia una conversaci√≥n
                {
                    id: "trigger_1",
                    type: "trigger",
                    module: "whatsapp",
                    event: "conversation_started",
                    next: ["action_welcome"],
                },
                // 2. Acci√≥n: Mensaje de bienvenida
                {
                    id: "action_welcome",
                    type: "action",
                    module: "whatsapp",
                    event: "send_message",
                    data: {
                        message: "¬°Hola {{contact_name}}! üëã\n\nSoy el asistente virtual de FUSIONCOL. ¬øEn qu√© puedo ayudarte hoy?\n\n1Ô∏è‚É£ Informaci√≥n sobre productos\n2Ô∏è‚É£ Estado de mi pedido\n3Ô∏è‚É£ Soporte t√©cnico\n4Ô∏è‚É£ Hablar con un agente\n\nPor favor, responde con el n√∫mero de la opci√≥n que necesitas.",
                    },
                    next: ["condition_menu"],
                },
                // 3. Condici√≥n: Evaluar respuesta del men√∫
                {
                    id: "condition_menu",
                    type: "condition",
                    module: "system",
                    data: {
                        condition: {
                            field: "message",
                            operator: "equals",
                            value: "1",
                        },
                    },
                    trueBranch: "action_products",
                    falseBranch: "condition_menu_2",
                },
                // 4. Rama: Informaci√≥n de productos
                {
                    id: "action_products",
                    type: "action",
                    module: "whatsapp",
                    event: "send_message",
                    data: {
                        message: "üì¶ *Nuestros productos principales:*\n\n‚Ä¢ Sistema CRM completo\n‚Ä¢ Automatizaci√≥n de WhatsApp\n‚Ä¢ Gesti√≥n de contactos\n‚Ä¢ Pipeline de ventas\n‚Ä¢ Reportes y anal√≠ticas\n\n¬øTe gustar√≠a saber m√°s sobre alg√∫n producto en particular?",
                    },
                    next: ["condition_more_info"],
                },
                // 5. Condici√≥n alternativa para opci√≥n 2
                {
                    id: "condition_menu_2",
                    type: "condition",
                    module: "system",
                    data: {
                        condition: {
                            field: "message",
                            operator: "equals",
                            value: "2",
                        },
                    },
                    trueBranch: "action_order_status",
                    falseBranch: "condition_menu_3",
                },
                // 6. Rama: Estado de pedido
                {
                    id: "action_order_status",
                    type: "action",
                    module: "whatsapp",
                    event: "send_message",
                    data: {
                        message: "üìã Para consultar el estado de tu pedido, por favor proporciona:\n\n‚Ä¢ N√∫mero de pedido\n‚Ä¢ O tu correo electr√≥nico registrado\n\nNuestro equipo te responder√° en breve con la informaci√≥n actualizada.",
                    },
                    next: ["action_transfer_agent"],
                },
                // 7. Condici√≥n para opci√≥n 3
                {
                    id: "condition_menu_3",
                    type: "condition",
                    module: "system",
                    data: {
                        condition: {
                            field: "message",
                            operator: "equals",
                            value: "3",
                        },
                    },
                    trueBranch: "action_support",
                    falseBranch: "condition_menu_4",
                },
                // 8. Rama: Soporte t√©cnico
                {
                    id: "action_support",
                    type: "action",
                    module: "whatsapp",
                    event: "send_message",
                    data: {
                        message: "üõ†Ô∏è *Soporte T√©cnico*\n\nPor favor describe brevemente tu problema:\n\n‚Ä¢ ¬øQu√© estabas intentando hacer?\n‚Ä¢ ¬øQu√© error o problema encontraste?\n‚Ä¢ ¬øDesde cu√°ndo ocurre?\n\nUn agente t√©cnico te atender√° pronto.",
                    },
                    next: ["action_transfer_agent"],
                },
                // 9. Condici√≥n para opci√≥n 4 o cualquier otra
                {
                    id: "condition_menu_4",
                    type: "condition",
                    module: "system",
                    data: {
                        condition: {
                            field: "message",
                            operator: "equals",
                            value: "4",
                        },
                    },
                    trueBranch: "action_transfer_agent",
                    falseBranch: "action_invalid_option",
                },
                // 10. Opci√≥n inv√°lida
                {
                    id: "action_invalid_option",
                    type: "action",
                    module: "whatsapp",
                    event: "send_message",
                    data: {
                        message: "‚ùå No entend√≠ tu respuesta. Por favor responde con un n√∫mero del 1 al 4:\n\n1Ô∏è‚É£ Informaci√≥n sobre productos\n2Ô∏è‚É£ Estado de mi pedido\n3Ô∏è‚É£ Soporte t√©cnico\n4Ô∏è‚É£ Hablar con un agente",
                    },
                    next: ["condition_menu"],
                },
                // 11. Transferir a agente
                {
                    id: "action_transfer_agent",
                    type: "action",
                    module: "whatsapp",
                    event: "send_message",
                    data: {
                        message: "üë§ Te estoy transfiriendo con un agente humano. Por favor espera un momento...\n\n‚è±Ô∏è Tiempo estimado de espera: 2-5 minutos",
                    },
                    next: ["action_notify_agent"],
                },
                // 12. Notificar al equipo
                {
                    id: "action_notify_agent",
                    type: "action",
                    module: "system",
                    event: "notify_team",
                    data: {
                        message: "Cliente requiere atenci√≥n humana",
                    },
                },
                // 13. Condici√≥n para m√°s informaci√≥n
                {
                    id: "condition_more_info",
                    type: "condition",
                    module: "system",
                    data: {
                        condition: {
                            field: "message",
                            operator: "contains",
                            value: "s√≠",
                        },
                    },
                    trueBranch: "action_detailed_info",
                    falseBranch: "action_anything_else",
                },
                // 14. Informaci√≥n detallada
                {
                    id: "action_detailed_info",
                    type: "action",
                    module: "whatsapp",
                    event: "send_message",
                    data: {
                        message: "üì± *CRM WhatsApp Business*\n\n‚úÖ Gesti√≥n unificada de conversaciones\n‚úÖ Automatizaciones personalizables\n‚úÖ Reportes en tiempo real\n‚úÖ Integraci√≥n con tu sitio web\n‚úÖ API para desarrolladores\n\nüí∞ Planes desde $29/mes\n\n¬øTe gustar√≠a agendar una demo?",
                    },
                    next: ["action_end"],
                },
                // 15. Preguntar si necesita algo m√°s
                {
                    id: "action_anything_else",
                    type: "action",
                    module: "whatsapp",
                    event: "send_message",
                    data: {
                        message: "¬øHay algo m√°s en lo que pueda ayudarte? üòä",
                    },
                    next: ["action_end"],
                },
                // 16. Finalizar
                {
                    id: "action_end",
                    type: "action",
                    module: "whatsapp",
                    event: "send_message",
                    data: {
                        message: "¬°Gracias por contactarnos! Si necesitas m√°s ayuda, no dudes en escribirnos nuevamente. ¬°Que tengas un excelente d√≠a! üåü",
                    },
                },
            ],
        };
        // Crear la automatizaci√≥n
        const automation = yield AutomationModel_1.default.create(chatbotAutomation);
        console.log(`‚úÖ Automatizaci√≥n creada: ${automation.name} (ID: ${automation._id})`);
        // Crear una segunda automatizaci√≥n: Respuesta a palabras clave
        const keywordAutomation = {
            name: "Respuestas a Palabras Clave",
            description: "Responde autom√°ticamente a preguntas frecuentes basadas en palabras clave",
            organizationId: organization._id,
            isActive: true,
            triggerType: "keyword",
            triggerConditions: {
                keywords: ["precio", "costo", "cu√°nto", "valor", "pago"],
            },
            conversationSettings: {
                pauseOnUserReply: false,
                maxMessagesPerSession: 5,
                sessionTimeout: 60,
            },
            createdBy: user._id,
            nodes: [
                {
                    id: "trigger_keyword",
                    type: "trigger",
                    module: "whatsapp",
                    event: "keyword_detected",
                    next: ["action_pricing"],
                },
                {
                    id: "action_pricing",
                    type: "action",
                    module: "whatsapp",
                    event: "send_message",
                    data: {
                        message: "üí∞ *Informaci√≥n de Precios*\n\n‚Ä¢ Plan B√°sico: $29/mes\n‚Ä¢ Plan Profesional: $79/mes\n‚Ä¢ Plan Empresa: $199/mes\n\nTodos incluyen:\n‚úÖ Usuarios ilimitados\n‚úÖ Soporte 24/7\n‚úÖ Actualizaciones gratuitas\n\nüìû ¬øTe gustar√≠a que un asesor te contacte?",
                    },
                },
            ],
        };
        const automation2 = yield AutomationModel_1.default.create(keywordAutomation);
        console.log(`‚úÖ Automatizaci√≥n creada: ${automation2.name} (ID: ${automation2._id})`);
        console.log("\nüéâ ¬°Automatizaciones de ejemplo creadas exitosamente!");
        console.log("\nüìù Resumen:");
        console.log(`1. ${chatbotAutomation.name}: Flujo completo con men√∫ y condicionales`);
        console.log(`2. ${keywordAutomation.name}: Respuesta autom√°tica a palabras clave`);
    }
    catch (error) {
        console.error("‚ùå Error creando automatizaciones:", error);
    }
    finally {
        yield mongoose_1.default.disconnect();
        console.log("üîå Desconectado de MongoDB");
    }
});
// Ejecutar el script
if (require.main === module) {
    createSampleAutomation()
        .then(() => process.exit(0))
        .catch((error) => {
        console.error(error);
        process.exit(1);
    });
}
exports.default = createSampleAutomation;
